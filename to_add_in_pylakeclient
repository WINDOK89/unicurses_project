#in constructor

"""get PyLakeDDriver connection"""
self.MyLake = PyLakeDriver("wintell", "wintell347", "148.251.51.21", DefaultDir="wintell/SR4")

"""set memory for tag"""
self.TagMemory = TagMemory(self.MyLake.browse_directory())
self.DirMemory = DirMemory(self.MyLake.get_tag_directories())

"""tag choice window have to be before output window so we see output windows"""
self.ChoiceWindow = DisplayWindow(self.stdscr, self.InputWindow)

"""Dir choice window have to be before output window so we see output windows"""
self.DirChoiceWindow = DisplayWindow(self.stdscr, self.InputWindow)

"""redefine start loop

""" to put before manager buffer
"""to displlay at top display screen"""
        top_panel(self.OutputWindow.panel)
        bottom_panel(self.ChoiceWindow.panel)
        bottom_panel(self.DirChoiceWindow.panel)
        self.OutputWindow.show_changes()


"""manage buffer addins
        elif (key == 9):
            """reinitialize the quit request flag"""
            self.ChoiceWindow.quitRequest=True

            PosTag, lastSection=self.TagMemory.get_next(self.Buffer)
            if len(PosTag)==1:
                self.Buffer=self.Buffer+list(PosTag[0])[len(lastSection):]
                self.InputWindow.PosCur = len(self.InputWindow.message) + len(self.Buffer)
            elif len(PosTag)>1:
                self.ChoiceWindow.clear_display()
                top_panel(self.ChoiceWindow.panel)
                bottom_panel(self.OutputWindow.panel)
                bottom_panel(self.DirChoiceWindow.panel)
                for elt in PosTag:
                    self.ChoiceWindow.add_text(" --> {}".format(elt),color=7, attribute=A_REVERSE)
                self.ChoiceWindow.show_changes()
            else:
                pass

        elif (key == KEY_BTAB):
            """reinitialize the quit request flag"""
            self.ChoiceWindow.quitRequest = True

            PosTag, lastSection = self.DirMemory.get_next(self.Buffer)
            if len(PosTag) == 1:
                self.Buffer = self.Buffer + list(PosTag[0])[len(lastSection):]
                self.InputWindow.PosCur = len(self.InputWindow.message) + len(self.Buffer)
            elif len(PosTag) > 1:
                self.DirChoiceWindow.clear_display()
                top_panel(self.DirChoiceWindow.panel)
                bottom_panel(self.OutputWindow.panel)
                bottom_panel(self.ChoiceWindow.panel)
                for elt in PosTag:
                    self.DirChoiceWindow.add_text(" --> {}".format(elt), color=8, attribute=A_REVERSE)
                self.DirChoiceWindow.show_changes()
            else:
                pass